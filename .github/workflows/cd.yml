# This is a basic workflow to help you get started with Actions

name: CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# env:
  # applicationfolder: spring-boot-hello-world-example
  # S3BUCKET: buc

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    
    permissions:
      packages: write
      contents: read
      id-token: write
    
    env:
      env: development
      # AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      # AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.IAMROLE_GITHUB }}
          role-session-name: GitHub-Action-Role-deploy
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
      
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      
      - name: Install dependencies ðŸ”¨
        run: yarn

      - name: Build ðŸ“¦
        run: yarn build
        
      - name: Deploy
        run: aws s3 sync build s3://${{ secrets.S3_BUCKET_DEV }}

      # - name: Deploy ðŸš€
      #   uses: lbertenasco/s3-deploy@v1
      #   with:
      #     folder: build
      #     bucket: ${{ secrets.S3_BUCKET_DEV }}
      #     dist-id: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID_DEV }}
      #     invalidation: / *
          
